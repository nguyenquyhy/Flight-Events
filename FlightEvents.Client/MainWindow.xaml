<Window x:Class="FlightEvents.Client.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FlightEvents.Client"
        xmlns:converters="clr-namespace:FlightEvents.Client.Converters"
        mc:Ignorable="d" Loaded="Window_Loaded" StateChanged="Window_StateChanged"
        Title="Flight Events" Height="290" Width="340" ResizeMode="CanMinimize">

    <Window.Resources>
        <converters:BoolReversedConverter x:Key="BoolReversedConverter" />
        <converters:NullToVisibilityConverter x:Key="NullToVisibleConverter" Reversed="True" />
        <converters:NullToVisibilityConverter x:Key="NullToCollapsedConverter" />
        <converters:ConnectionStateToBrushConverter x:Key="ConnectionStateToBrushConverter" />
        <converters:NullToBrushConverter x:Key="NullToBrushConverter" />
        <converters:StatesToBrushConverter x:Key="StatesToBrushConverter" />

        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="3" />
        </Style>

        <Style x:Key="PlaceHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent}, 
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource" 
                                 Background="Transparent" 
                                 Panel.ZIndex="2" />
                            <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="10,0,10,2">
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="Margin" Value="0,5,5,5" />
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Text="Server" Grid.Row="0" Grid.Column="0" />
        <TextBlock Text="{Binding HubConnectionState}" Foreground="{Binding HubConnectionState, Converter={StaticResource ConnectionStateToBrushConverter}}" Grid.Row="0" Grid.Column="1" />

        <TabControl Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Stretch">
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <TextBlock Text="Simulator" Margin="0" />
                        <Ellipse Width="10" Height="10" Margin="4,0,0,0">
                            <Ellipse.Fill>
                                <MultiBinding Converter="{StaticResource StatesToBrushConverter}">
                                    <Binding Path="SimConnectionState" />
                                    <Binding Path="IsTracking" />
                                </MultiBinding>
                            </Ellipse.Fill>
                        </Ellipse>
                    </StackPanel>
                </TabItem.Header>
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <TextBlock Text="SimConnect" Grid.Row="1" Grid.Column="0" />
                    <TextBlock Text="{Binding SimConnectionState}" Grid.Row="1" Grid.Column="1" Foreground="{Binding SimConnectionState, Converter={StaticResource ConnectionStateToBrushConverter}}" />
                    <TextBlock Text="{Binding NearestAirport.Ident}" ToolTip="Nearest Airport" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" />

                    <TextBlock Text="Callsign" Grid.Row="2" Grid.Column="0" />
                    <TextBox Text="{Binding Callsign, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        IsEnabled="{Binding IsTracking, Converter={StaticResource BoolReversedConverter}}"
                        Grid.Row="2" Grid.Column="1" MaxLength="12" />

                    <TextBlock Text="Ident" Grid.Row="3" Grid.Column="0" />
                    <CheckBox IsChecked="{Binding TransponderIdent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="3" Grid.Column="1" />

                    <TextBlock Text="ATC Remarks" Grid.Row="4"  />
                    <TextBox Text="{Binding Remarks, Mode=TwoWay}" Grid.Row="4" Grid.Column="1" 
                        IsEnabled="{Binding IsTracking, Converter={StaticResource BoolReversedConverter}}" />

                    <Button x:Name="ButtonStartTrack" Content="Start Flight Tracking" Grid.Row="5" Grid.Column="1" Click="ButtonStartTrack_Click" />
                    <Button x:Name="ButtonStopTrack" Content="Stop Flight Tracking" Grid.Row="5" Grid.Column="1" Click="ButtonStopTrack_Click" Visibility="Collapsed" />

                    <Button x:Name="ButtonTeleport" Content="Teleport Aircraft" Margin="0,5,0,0" Grid.Row="6" Grid.Column="1" Click="ButtonTeleport_Click" />

                </Grid>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <TextBlock Text="Discord" Margin="0" />
                        <Ellipse Fill="{Binding DiscordConnection, Converter={StaticResource NullToBrushConverter}}" Width="10" Height="10" Margin="4,0,0,0" />
                    </StackPanel>
                </TabItem.Header>
                <Grid>
                    <Grid Margin="5" Visibility="{Binding DiscordConnection, Converter={StaticResource NullToVisibleConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Button x:Name="ButtonDiscord" Content="Connect" Click="ButtonDiscord_Click" 
                            Grid.ColumnSpan="2" />

                        <TextBlock Text="Confirm Code:" Grid.Row="1" />
                        <TextBox x:Name="TextDiscordConfirm" Grid.Row="1" Grid.Column="1" />
                        <Button x:Name="ButtonDiscordConfirm" Content="Confirm" Grid.Row="2" Grid.Column="1" Click="ButtonDiscordConfirm_Click" />
                    </Grid>

                    <Grid Margin="5" Visibility="{Binding DiscordConnection, Converter={StaticResource NullToCollapsedConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBlock Text="Connected as:" />
                        <TextBlock Text="{Binding DiscordConnection.DisplayName}" Grid.Row="0" Grid.Column="1" />

                        <Button x:Name="ButtonDiscordDisconnect" Content="Disconnect" Click="ButtonDiscordDisconnect_Click" Grid.Row="2" Grid.ColumnSpan="2" />
                    </Grid>
                </Grid>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <TextBlock Text="ATC Radar" Margin="0" />
                        <Ellipse Fill="{Binding AtcConnectionState, Converter={StaticResource ConnectionStateToBrushConverter}}" Width="10" Height="10" Margin="4,0,0,0" />
                    </StackPanel>
                </TabItem.Header>
                <GroupBox Header="For controllers">
                    <StackPanel Margin="5">
                        <CheckBox IsChecked="{Binding VatsimMode, Mode=TwoWay}" Content="VATSIM Mode" />

                        <Button x:Name="ButtonStartATC" Content="Start ATC Server" Click="ButtonStartATC_Click" IsEnabled="False" />
                        <Button x:Name="ButtonStopATC" Content="Stop ATC Server" Click="ButtonStopATC_Click" Visibility="Collapsed" />
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Text="Callsign" Grid.Column="0" />
                            <TextBlock Text="{Binding AtcCallsign}" Grid.Column="1" />
                        </Grid>
                    </StackPanel>
                </GroupBox>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" Margin="2">
                        <TextBlock Text="Settings" Margin="0" />
                    </StackPanel>
                </TabItem.Header>

                <StackPanel Margin="5">
                    <CheckBox x:Name="BroadcastUDP" Content="Broadcast data to local network" IsChecked="{Binding BroadcastUDP, Mode=TwoWay}" Checked="BroadcastUDP_Checked" Unchecked="BroadcastUDP_Unchecked" />
                    <TextBox Text="{Binding BroadcastIP, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" Width="200" LostFocus="BroadcastIP_LostFocus" HorizontalAlignment="Left" Margin="20,0,0,10" 
                             Style="{StaticResource PlaceHolder}" Tag="IP Address or empty (for broadcast)"
                             IsEnabled="{Binding BroadcastUDP, Converter={StaticResource BoolReversedConverter}}"/>
                    <CheckBox Content="Disable Discord Rich Present" IsChecked="{Binding DisableDiscordRP, Mode=TwoWay}" Checked="DisableDiscordRP_Checked" Unchecked="DisableDiscordRP_Unchecked" />
                    <CheckBox Content="Slow Mode (require restart)" IsChecked="{Binding SlowMode, Mode=TwoWay}" Checked="SlowMode_Checked" Unchecked="SlowMode_Unchecked" />
                    <CheckBox Content="Minimize to Taskbar" IsChecked="{Binding MinimizeToTaskbar, Mode=TwoWay}" Checked="MinimizeToTaskbar_Checked" Unchecked="MinimizeToTaskbar_Unchecked" />
                </StackPanel>
            </TabItem>
        </TabControl>

        <TextBlock x:Name="TextURL" Text="https://localhost" 
                   TextDecorations="Underline" Foreground="Blue" 
                   Grid.Row="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Bottom" 
                   MouseDown="TextURL_MouseDown"/>

        <tb:TaskbarIcon 
            x:Name="myNotifyIcon"
            xmlns:tb="http://www.hardcodet.net/taskbar"
            Visibility="Collapsed"
            ToolTipText="Flight Events"
            IconSource="/icon.ico"
            TrayLeftMouseDown="myNotifyIcon_TrayLeftMouseDown"
            />
    </Grid>
</Window>
